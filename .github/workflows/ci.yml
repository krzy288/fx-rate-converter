name: CI / CD Pipeline

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]


jobs:
  setup:
    name: ⚙️ Environment Setup & Dependencies & Unit Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python (Test outside Docker)
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies (Test outside Docker)
      working-directory: backend
      run: | 
        python -m pip install --upgrade pip 
        pip install -r requirements.txt

    - name: Run unit tests
      run: pytest tests/unit --verbose


  docker-build:
    name: 🐳 Docker Compose Integration Test
    runs-on: ubuntu-latest
    needs: setup    
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3 

    - name: Build and run with Docker compose 
      run: |
        docker compose -f docker-compose.yaml up --build -d

    - name: Test if app is live (basic check)
      run: |
        for i in {1..5}; do
          if curl -f http://localhost:8000/docs; then
            echo "App is live!"
            exit 0
          fi
          echo "Waiting for app to start... ($i/5)"
          sleep 10
        done
        echo "App did not start in time."

    - name: Run Smoke Tests
      run: |
        sleep 3
        curl -f http://localhost:8000/
        curl -f http://localhost:8000/db-check
        curl -f http://localhost:8000/history || echo "History endpoint failed, can be empty if no conversions yet"

    - name: Stop Docker containers
      run: docker compose -f docker-compose.yaml down



  deploy: 
    name: 🚀 Deploy to EC2
    needs: docker-build
    runs-on: ubuntu-latest

    steps:
      - name: Free up disk space
        run: |
         sudo rm -rf /usr/share/dotnet
         sudo rm -rf /opt/ghc
         sudo rm -rf /usr/local/share/boost
         sudo apt-get clean

        # Add cleanup steps here
      - name: Clean up APT cache
        run: sudo apt-get clean

      - name: Remove unused Docker resources
        run: docker system prune -af || true

      - name: Remove unnecessary files
        run: rm -rf ~/.cache/*

      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: � Deploy and optimize EC2
        run: |
          
            # Run optimization and cleanup before deployment
            chmod +x ./scripts/optimize-and-cleanup.sh
            sudo ./scripts/optimize-and-cleanup.sh
        
            ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -e
            cd ~/fx-converter
            git pull origin master
            

            
            # Deploy with Docker Compose
            docker compose -f docker-compose.yaml down || true
            docker compose -f docker-compose.yaml up --build -d
            
            # Wait for containers to be healthy
            sleep 10
            EOF

      - name: Run smoke checks on EC2
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -e
            cd ~/fx-converter
            # Wait for service to be up (try 5 times, 10s apart)
            for i in {1..5}; do
              if curl -f http://localhost:8000/; then
                echo "Service is up!"
                break
              fi
              echo "Waiting for service to be up... ($i/5)"
              sleep 10
              if [ "$i" -eq 5 ]; then
                echo "Service did not start in time."; exit 1
              fi
            done
            # Run smoke tests with curl
            curl -f http://localhost:8000/ || (echo "Root endpoint failed" && exit 1)
            curl -f http://localhost:8000/db-check || (echo "DB check failed" && exit 1)
            curl -f http://localhost:8000/history || echo "History endpoint failed, can be empty if no conversions yet"
          EOF
